
import matplotlib.pyplot as plt
import collections
import matplotlib as mpl


def list_of_teachers(fail_name):
    f = open(fail_name, 'r')
    prep = []
    while True:
        line = f.readline()
        if not line:
            break
        for i in range(0, len(line.split(';')) - 1, 3):
            prep.append(line.split(';')[i])
    Prep = list(set(prep))
    Prep.sort()
    f.close()
    return Prep


def list_of_group(fail_name):
    f = open(fail_name, 'r')
    group = []
    while True:
        line = f.readline()
        if not line:
            break
        for i in range(1, len(line.split(';')), 3):
            group.append(line.split(';')[i])
    Group = list(set(group))
    Group.sort()
    f.close()
    return Group


appraisals = list()
data = collections.defaultdict(list)

appraisals1 = list()
data1 = collections.defaultdict(list)

for i in list_of_teachers("students.csv"):
    # print(i)
    prep_appraisals = []
    f = open("students.csv", 'r')
    while True:
        line = f.readline()
        # print(line)
        if not line:
            f.close()
            break
        if line.split(';')[0] == str(i):
            # print('___________________')
            prep_appraisals.append(line.split(';')[2])
    for h in range(3, 11, 1):
        appraisals.append(str(prep_appraisals).count(str(h)))
    for h in range(3, 11, 1):
        data[i].append(int(str(prep_appraisals).count(str(h))))
f.close()

for i in list_of_group("students.csv"):
    # print(i)
    group_appraisals = []
    f = open("students.csv", 'r')
    while True:
        line = f.readline()
        # print(line)
        if not line:
            f.close()
            break
        if line.split(';')[1] == str(i):
            # print('___________________')
            group_appraisals.append(line.split(';')[2])
    for h in range(3, 11, 1):
        appraisals1.append(str(group_appraisals).count(str(h)))
    for h in range(3, 11, 1):
        data1[i].append(int(str(group_appraisals).count(str(h))))
f.close()

# Первый график
value3 = []
value4 = []
value5 = []
value6 = []
value7 = []
value8 = []
value9 = []
value10 = []
for k, v in data.items():
    value3.append(v[0])
    value4.append(sum(v[0:2]))
    value5.append(sum(v[0:3]))
    value6.append(sum(v[0:4]))
    value7.append(sum(v[0:5]))
    value8.append(sum(v[0:6]))
    value9.append(sum(v[0:7]))
    value10.append(sum(v[0:8]))

data_names = list_of_teachers("students.csv")

dpi = 80
fig = plt.figure(dpi=dpi, figsize=(512 / dpi, 384 / dpi))
mpl.rcParams.update({'font.size': 10})

plt.title('Marks pre prep', fontsize=20)

ax = plt.axes()
ax.yaxis.grid(True, zorder=1)

# ax.axes.xaxis.set_visible(False)
# ax.axes.yaxis.set_visible(False)

xs = range(len(data_names))

plt.bar([x + 0.05 for x in xs], value10,
        width=0.5, color='slategrey', alpha=0.5, label='10',
        zorder=2)
plt.bar([x + 0.05 for x in xs], value9,
        width=0.5, color='magenta', alpha=0.5, label='9',
        zorder=3)
plt.bar([x + 0.05 for x in xs], value8,
        width=0.5, color='saddlebrown', alpha=0.5, label='8',
        zorder=4)
plt.bar([x + 0.05 for x in xs], value7,
        width=0.5, color='blueviolet', alpha=0.5, label='7',
        zorder=5)
plt.bar([x + 0.05 for x in xs], value6,
        width=0.5, color='red', alpha=0.6, label='6',
        zorder=6)
plt.bar([x + 0.05 for x in xs], value5,
        width=0.5, color='green', alpha=0.7, label='5',
        zorder=7)
plt.bar([x + 0.05 for x in xs], value4,
        width=0.5, color='orange', alpha=0.8, label='4',
        zorder=8)
plt.bar([x + 0.05 for x in xs], value3,
        width=0.5, color='dodgerblue', alpha=0.9, label='3',
        zorder=9)
plt.xticks(xs,data_names)

fig.autofmt_xdate(rotation=25)

plt.legend(loc='upper right')
fig.savefig('prep.png')

# Второй график


value31 = []
value41 = []
value51 = []
value61 = []
value71 = []
value81 = []
value91 = []
value101 = []
for k, v in data1.items():
    value31.append(v[0])
    value41.append(sum(v[0:2]))
    value51.append(sum(v[0:3]))
    value61.append(sum(v[0:4]))
    value71.append(sum(v[0:5]))
    value81.append(sum(v[0:6]))
    value91.append(sum(v[0:7]))
    value101.append(sum(v[0:8]))

data_names = list_of_group("students.csv")

dpi = 80
fig = plt.figure(dpi=dpi, figsize=(512 / dpi, 384 / dpi))
mpl.rcParams.update({'font.size': 10})

plt.title('Marks pre group', fontsize=20)

ax1 = plt.axes()
ax1.yaxis.grid(True, zorder=1)
# ax.axes.xaxis.set_visible(False)
# ax.axes.yaxis.set_visible(False)

xs1 = range(len(data_names))

plt.bar([x + 0.05 for x in xs1], value101, width=0.5, color='slategrey', alpha=0.5, label='10', zorder=2)
plt.bar([x + 0.05 for x in xs1], value91, width=0.5, color='magenta', alpha=0.5, label='9', zorder=3)
plt.bar([x + 0.05 for x in xs1], value81,
        width=0.5, color='saddlebrown', alpha=0.5, label='8',
        zorder=4)
plt.bar([x + 0.05 for x in xs1], value71,
        width=0.5, color='blueviolet', alpha=0.5, label='7',
        zorder=5)
plt.bar([x + 0.05 for x in xs1], value61,
        width=0.5, color='red', alpha=0.6, label='6',
        zorder=6)
plt.bar([x + 0.05 for x in xs1], value51,
        width=0.5, color='green', alpha=0.7, label='5',
        zorder=7)
plt.bar([x + 0.05 for x in xs1], value41,
        width=0.5, color='orange', alpha=0.8, label='4',
        zorder=8)
plt.bar([x + 0.05 for x in xs1], value31,
        width=0.5, color='dodgerblue', alpha=0.9, label='3',
        zorder=9)
plt.xticks(xs1,data_names)
fig.autofmt_xdate(rotation=25)

plt.legend(loc='upper right')
fig.savefig('group.png')
